#!/bin/bash

# Execute the Drupal 7 to Drupal 8 migration

# Make a new Drupal 7 multidev environment. This step is not really necessary.
# The migration could read from the Dev environment. Or Test or Live for that
# matter. I'm currently making a new environment because as constructed, this
# script will print database connection info to the Circle report. So a multidev
# is made, and then deleted at the end of the script.
terminus site create-env --to-env=$D7_SOURCE_BRANCH --from-env=dev --site=$D7_SOURCE_PANTHEON_SITE
terminus site wake --site=$D7_SOURCE_PANTHEON_SITE --env=$D7_SOURCE_BRANCH


export D7_DB_DATABASE=$(terminus site connection-info  --site=migrate-pantheon-d7  --env=$D7_SOURCE_BRANCH --field=mysql_database)
export D7_DB_USERNAME=$(terminus site connection-info --site=migrate-pantheon-d7  --env=$D7_SOURCE_BRANCH --field=mysql_username)
export D7_DB_PASSWORD=$(terminus site connection-info --site=migrate-pantheon-d7  --env=$D7_SOURCE_BRANCH --field=mysql_password)
export D7_DB_HOST=$(terminus site connection-info --site=migrate-pantheon-d7  --env=$D7_SOURCE_BRANCH --field=mysql_host)
export D7_DB_PORT=$(terminus site connection-info --site=migrate-pantheon-d7  --env=$D7_SOURCE_BRANCH --field=mysql_port)

terminus drush  --site=$PANTHEON_SITE  --env=$PANTHEON_BRANCH  "migrate-upgrade  --legacy-db-url='mysql://$D7_DB_USERNAME:$D7_DB_PASSWORD@$D7_DB_HOST:$D7_DB_PORT/$D7_DB_DATABASE'"
terminus site delete-env --site=$D7_SOURCE_PANTHEON_SITE --env=$D7_SOURCE_BRANCH --remove-branch
